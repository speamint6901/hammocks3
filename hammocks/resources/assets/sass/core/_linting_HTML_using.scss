$highlight:#ff0062;
$InlineStyles_highlight:#c4ff00;
$UnaccessibleImages_highlight:#b142a0;
$MissingLinkTargets_highlight:#1883e0;
$UnnecessaryorDeprecatedAttributes_highlight:#e8b405;
$not_name_highlight:#f9a500;
$not_label_highlight:#f9a500;
$not_id_highlight:#f9a500;


//#インラインのスタイル#
//問題の要素が選択されてた場合は、ページ上で目立つようにレッドの太いボーダー
//インラインのスタイルが適用されているページ上のあらゆる要素を対象にします。原則としてインラインのスタイルは、それらの詳細度のレベルが増えた際に上書きするのが難しくなるため、避けるべきです。場合によってインラインのスタイルが必要な場合もありますが、このセレクタはインラインのスタイルをハイライト表示します。

*[style] {
 border: 5px solid $InlineStyles_highlight; /* Style to make the elements noticeable */
}


//#リンクのターゲット#
//href属性を持たないアンカー要素と役に立たないターゲットを指定している要素をハイライト表示
a:not([href])
a[href="#"],
a[href=""],
a[href*="javascript:void(0)"] {
 color:$MissingLinkTargets_highlight ;
}


//#アクセシブルではない画像#
//alt属性がない場合、ほとんどのスクリーンリーダーはsrc属性の値を読み込みますが、その値はユーザにとって役に立たず、実際には混乱する可能性があります。

//img:not([alt]) { color:$UnaccessibleImages_highlight ; }
//上記のセレクタでは空のalt属性、つまり「alt=""」の画像を選択しません。空のalt属性はスクリーンリーダーで画像をスキップさせる意図的な方法である可能性があります。たとえば、画像が装飾的に使われている時などです。
//下記のセレクタを使うことで、これらをハイライト表示することができます。
img[alt=""] { color:$UnaccessibleImages_highlight ; }


//#ドキュメントの言語指定#
//すべてのhtml要素に存在しなければならない重要な属性が、language属性です。この属性は、スクリーンリーダーにページが何の言語なのか伝え、コンテンツをどのように読み上げるかを決定するためのシグナルです。
html:not([lang]),
html[lang=""] { color:$highlight ; }


//#不適切な文字セット#
//UTF-8に設定されていないmeta要素のすべてのcharsetタグをターゲットにします。このタグは、UTF-8形式の文字エンコーディングを使用するようにブラウザに指示します。これは現在、HTMLドキュメントで推奨されている形式です。したがって、validなHTMLにはこのタグが必要です。
meta[charset]:not([charset="UTF-8"]) { color:$highlight ; }
//理想的には、このタグはhead内で最初の要素として記述する必要があります。下記のセレクタを使用して、確認できます。
meta[charset="UTF-8"]:not(:first-child) { color:$highlight ; }


//#アクセシブルではないビューポート属性#
//アクセシブルではないビューポートのmeta属性をハイライト表示します。ビューポートを縮小・拡大するユーザの操作を制限しないようにすることが一般的に推奨されています。そのため、「user-scalable=no」「maximum-scale」「minimum-scale」は決して使用しないでください。
meta[name="viewport"][content*="user-scalable=no"],
meta[name="viewport"][content*="maximum-scale"],
meta[name="viewport"][content*="minimum-scale"] { color:$highlight ; }


//#ラベルのないフォーム要素#
//フォーム要素はラベルを付けることに関して、最も重要な要素です。フォーム要素にラベルを付けるにはいくつかの方法がありますが、最も一般的な方法は、label要素によって参照されるid属性を要素に与えることです。下記のセレクタは、id属性を持たないフォーム要素を調べ、for属性を使用してフォーム要素に明示的にリンクされていない要素をラベル付けします。
input:not([id]),
select:not([id]),
textarea:not([id]) { color:$not_id_highlight ; }

label:not([for]) { color:$not_label_highlight ; }

//もう一つのフォーム要素にとって重要なラベル付けは、name属性を使用することです。id属性はHTML文書のコンテキストで要素にラベルを付けるために使用されますが、name属性はフォームのデータとともに送信されたときに要素を参照するために使用されます。
input:not([name]),
select:not([name]),
textarea:not([name]) { color:$not_name_highlight ; }

//さらに、フォーム要素自体のほかに、フォーム要素自体にname属性やid属性を与えると便利です。下記のセレクタは、name属性とid属性の両方が欠けているフォーム要素をハイライト表示します。
form:not([name]):not([id]) { color:$not_name_highlight ; }


//#空のインタラクティブな要素#
//リンクやボタンなどのインタラクティブな要素は通常、そのコンテンツによってラベル付けされます。aria-label属性など他の方法を使用して、これらの要素にラベルを付けることは可能ですが、値を空にすることは間違いである可能性があります。このセレクタは、HTMLコンテンツがないボタンのリンクをハイライト表示します。
button:empty,
a:empty { color:$highlight ; }


//#不必要、あるいは非推奨の属性#
//CSSセレクタを使用して、必要とされない、あるいは推奨されないHTMLの属性をハイライト表示します。
script[type="text/javascript"],
link[rel="stylesheet"][type="text/css"] { color:$UnnecessaryorDeprecatedAttributes_highlight ; border: 2px solid;}
